{"ast":null,"code":"var _jsxFileName = \"/home/anushkakundu/Downloads/anuk/anushka/src/components/homepage/WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      const apiKey = 'YOUR_API_KEY';\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=YOUR_LOCATION&appid=${apiKey}`;\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        console.log('Weather Data:', data);\n        setWeatherData(data);\n      } catch (error) {\n        console.log('Error fetching weather data:', error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  console.log('Weather Data:', weatherData);\n  const {\n    name,\n    main,\n    weather,\n    wind\n  } = weatherData;\n  if (!main || !weather || !wind) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Invalid weather data format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    temp\n  } = main;\n  const {\n    description,\n    icon\n  } = weather[0];\n  const {\n    speed\n  } = wind;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Location: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Temperature: \", temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Weather Condition: \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://openweathermap.org/img/w/${icon}.png`,\n      alt: \"Weather Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Wind Speed: \", speed, \" m/s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WeatherForecast","_s","weatherData","setWeatherData","fetchWeatherData","apiKey","apiUrl","response","fetch","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","name","main","weather","wind","temp","description","icon","speed","className","src","alt","_c","$RefreshReg$"],"sources":["/home/anushkakundu/Downloads/anuk/anushka/src/components/homepage/WeatherForecast.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst WeatherForecast = () => {\n  const [weatherData, setWeatherData] = useState(null);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      const apiKey = 'YOUR_API_KEY';\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=YOUR_LOCATION&appid=${apiKey}`;\n\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        console.log('Weather Data:', data);\n        setWeatherData(data);\n      } catch (error) {\n        console.log('Error fetching weather data:', error);\n      }\n    };\n\n    fetchWeatherData();\n  }, []);\n\n  if (!weatherData) {\n    return <div>Loading weather data...</div>;\n  }\n\n  console.log('Weather Data:', weatherData);\n\n  const { name, main, weather, wind } = weatherData;\n\n  if (!main || !weather || !wind) {\n    return <div>Error: Invalid weather data format</div>;\n  }\n\n  const { temp } = main;\n  const { description, icon } = weather[0];\n  const { speed } = wind;\n\n  return (\n    <div className=\"weather-forecast\">\n      <h2>Current Weather Forecast</h2>\n      <div>Location: {name}</div>\n      <div>Temperature: {temp}Â°C</div>\n      <div>Weather Condition: {description}</div>\n      <img src={`https://openweathermap.org/img/w/${icon}.png`} alt=\"Weather Icon\" />\n      <div>Wind Speed: {speed} m/s</div>\n    </div>\n  );\n};\n\nexport default WeatherForecast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,MAAM,GAAG,cAAc;MAC7B,MAAMC,MAAM,GAAI,yEAAwED,MAAO,EAAC;MAEhG,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;QACpC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;QAClCN,cAAc,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,KAAK,CAAC;MACpD;IACF,CAAC;IAEDT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,WAAW,EAAE;IAChB,oBAAOH,OAAA;MAAAe,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3C;EAEAP,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEV,WAAW,CAAC;EAEzC,MAAM;IAAEiB,IAAI;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGpB,WAAW;EAEjD,IAAI,CAACkB,IAAI,IAAI,CAACC,OAAO,IAAI,CAACC,IAAI,EAAE;IAC9B,oBAAOvB,OAAA;MAAAe,QAAA,EAAK;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtD;EAEA,MAAM;IAAEK;EAAK,CAAC,GAAGH,IAAI;EACrB,MAAM;IAAEI,WAAW;IAAEC;EAAK,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC;EACxC,MAAM;IAAEK;EAAM,CAAC,GAAGJ,IAAI;EAEtB,oBACEvB,OAAA;IAAK4B,SAAS,EAAC,kBAAkB;IAAAb,QAAA,gBAC/Bf,OAAA;MAAAe,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCnB,OAAA;MAAAe,QAAA,GAAK,YAAU,EAACK,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3BnB,OAAA;MAAAe,QAAA,GAAK,eAAa,EAACS,IAAI,EAAC,OAAE;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCnB,OAAA;MAAAe,QAAA,GAAK,qBAAmB,EAACU,WAAW;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3CnB,OAAA;MAAK6B,GAAG,EAAG,oCAAmCH,IAAK,MAAM;MAACI,GAAG,EAAC;IAAc;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/EnB,OAAA;MAAAe,QAAA,GAAK,cAAY,EAACY,KAAK,EAAC,MAAI;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/CID,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}